{"version":3,"sources":["components/AddCatergory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catey","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GIfGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagen","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAa,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAExB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAcA,OACI,sBAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAK,OAAMP,GAAN,mBAAsBO,OACzCN,EAAc,MAKlB,SACC,uBACGO,KAAK,OACLC,MAAOT,EACPU,SAlBmB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,QCJlBG,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAIpC,OAFAC,QAAQC,IAAI,CAACJ,KAAGC,QAAMC,QAGlB,sBAAKG,UAAU,yCAAf,UACG,qBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,4BAAIA,Q,uBCTDO,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdR,EAFc,iDAEkCS,UAAUF,GAF5C,+DAIDG,MAAMV,GAJL,cAIdW,EAJc,gBAMCA,EAAKC,OANN,uBAMbC,EANa,EAMbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAZtB,kBAgBbc,GAhBa,4CAAH,sDCIRK,EAAU,SAAC,GAAe,IAAdZ,EAAa,EAAbA,SAErB,ECHuB,SAACA,GACxB,MAA0BvB,mBAAS,CAC/B6B,KAAK,GACLO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WACNjB,EAAQC,GACPiB,MAAK,SAAAC,GAEEH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAIvB,IAGKC,EDhBuBK,CAAanB,GAA/BU,EAAZ,EAAOJ,KAAYO,EAAnB,EAAmBA,QAInB,OACI,qCACA,qBAAIjB,UAAU,oCAAd,cAAoDI,EAApD,OACCa,GAAW,mBAAGjB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAGIc,EAAOF,KAAI,SAAAY,GAAM,OACb,cAAC,EAAD,eAEIA,GADCA,EAAO7B,aEff8B,EAAe,WAGxB,MAAkC5C,mBAAS,CAAC,cAA5C,mBAAO6C,EAAP,KAAkB9C,EAAlB,KAMA,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEI8C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCjBzBuB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0a2cf78b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport const AddCategory= ({setCategories})=>{\r\n\r\n    const [inputValue,setInputValue] = useState('');\r\n    const handlerInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handlerSubmit= (e) =>{\r\n        //evitar que se refresque el navegador.\r\n        e.preventDefault();\r\n        //console.log('Submit Hecho');\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(catey => [ inputValue , ...catey]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handlerSubmit}>\r\n         <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handlerInputChange}\r\n         />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({id, title, url})=>{\r\n    \r\n    console.log({id,title,url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}"," export const getGifs = async(category) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=ngP1H5BijAJUCKHjlFYPXGUct61kciTx`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport {GifGridItem} from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GIfGrid = ({category}) =>{\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    \r\n   \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n            {\r\n            images.map(imagen=>(\r\n                <GifGridItem \r\n                key={imagen.id}\r\n                {...imagen}\r\n                />\r\n            ))\r\n            }\r\n            \r\n        </div>\r\n        \r\n        </>\r\n        \r\n    );\r\n}","import { useState,useEffect } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs= (category) =>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs=>{\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            \r\n        });\r\n    },[]);\r\n\r\n\r\n    return state;\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCatergory';\r\nimport { GIfGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    //const categories =['One Punch','Samuray X', 'Dragon Ball'];\r\n    const [categories,setCategories]= useState(['One Punch']); \r\n    /*\r\n    const handlerAdd= ()=>{\r\n        setCategories(catey => [...categories,'HunterXHunter']);\r\n    }\r\n    */\r\n    return (\r\n        <div>\r\n            <h2>GIF EXPERT APP</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                categories.map(category=>(\r\n                    <GIfGrid\r\n                    key={category} \r\n                    category={category}/>\r\n                ) )\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n  \n);\n\n"],"sourceRoot":""}